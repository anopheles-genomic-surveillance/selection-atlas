# Declare an identifier for this atlas. Will also be used as a URL slug.
atlas_id: "ag"

# Atlas subtitle describing the taxon or taxonomic group covered.
atlas_subtitle: "Anopheles gambiae complex"

# Set the analysis version identifier. This will be used to identify
# the outputs from a particular run of the analysis workflow. If you
# change any of the parameters in this configuration file then please
# also update the analysis version.
analysis_version: "2025.03.01"

# Set minimum and maximum cohort size parameters.
min_cohort_size: 15
max_cohort_size: 120  # If larger, will be randomly downsampled.

# Select the sample sets to include in the analysis.
sample_sets:
    - "3.0"  # All of Ag1000G phase 3, unrestricted
    - "1237-VO-BJ-DJOGBENOU-VMF00050"  # GAARD Benin, unrestricted
    - "1237-VO-BJ-DJOGBENOU-VMF00067"  # GAARD Benin, unrestricted
    - "1244-VO-GH-YAWSON-VMF00051"  # GAARD Ghana, unrestricted
    - "1245-VO-CI-CONSTANT-VMF00054"  # GAARD Cote d'Ivoire, unrestricted
    - "1253-VO-TG-DJOGBENOU-VMF00052"  # GAARD Togo, unrestricted
    - "1178-VO-UG-LAWNICZAK-VMF00025"  # Ugandan samples via Mara, unrestricted
    - "1244-VO-GH-YAWSON-VMF00149"  # GAARDIAN Ghana, with Martin Donnelly's permission
    - "barron-2019"  # unrestricted
    - "crawford-2016"  # unrestricted
    - "tennessen-2021"  # unrestricted
    - "bergey-2019"  # unrestricted
    - "campos-2021"  # unrestricted
    - "fontaine-2015-rebuild"  # unrestricted

# Filter samples to include in the analysis.
sample_query: "taxon in ['gambiae', 'coluzzii', 'arabiensis', 'bissau']"

# Select the contigs to analyse.
contigs:
    - "2RL"
    - "3RL"
    - "X"

# Pin the cohorts analysis version in order to get reproducible results.
cohorts_analysis: "20240924"

# Select the contig to use for H12 window size calibration.
h12_calibration_contig: "3L"

# Configuration for H12 signal detection.
h12_signal_detection_min_delta_aic: 1000
h12_signal_detection_min_stat_max: 0.1
h12_signal_detection_gflanks: [6]

# Set this value to "single-threaded" when running snakemake with
# more than 1 CPU to avoid thrashing. Otherwise, both dask and
# snakemake will be trying to use multiple CPUs, and so CPU
# resources are likely to be oversubscribed.
dask_scheduler: "single-threaded"

# TODO make these atlas-specific.
alerts:  ['01', '02', '03', '04', '05', '06', '07', '08', '09']
